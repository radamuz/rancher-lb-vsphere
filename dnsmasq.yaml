apiVersion: apps/v1
kind: Deployment
spec:
  containers:
  - name: dnsmasq
    image: jpillora/dnsmasq
    ports:
    - containerPort: 53
      # Esto asegura que dnsmasq estará disponible desde el puerto 53 / udp
      # (puerto y protocolo DNS predeterminados) en el nodo en el que se ejecuta este pod.
      # Esto tiene la consecuencia de que este pod no se puede duplicar en el nodo.
      hostPort: 53
      protocol: UDP
    args:
      [
        '--keep-in-foreground',
        '--log-queries',
        '--log-facility=-',
        '-h',
        '--hostsdir=/data',

        # Esto le indica a dnsmasq que es el DNS responsable de estos
        # dominios. Si no puede resolver un nombre de host dentro de estos dominios,
        # responderá con NXDOMAIN en lugar de intentar reenviar la solicitud
        # a un DNS ascendente.
        #'--local=/qa.parkside.at/',
        '--local=/qa.sm2baleares.es/',
      ]
    securityContext:
      capabilities:
        add: ['NET_ADMIN', 'NET_RAW', 'SETUID']
    volumeMounts:
    - mountPath: /data
      name: hosts
  - name: ingress-watch
    image: webrelay/ingress
    volumeMounts:
    - mountPath: /data
      name: hosts
    env:
    - name: HOSTS_FILE_PATH
      value: '/data/hosts'
  volumes:
  - name: hosts
    emptyDir: {}
  initContainers:
  - name: init-hosts
    image: busybox
    command: ['sh', '-c', 'echo', '127.0.0.1   localhost', '>', '/data/hosts']
    volumeMounts:
    - mountPath: /data
      name: hosts
  nodeSelector:
    # Esto ayuda al scheduler a encontrar el nodo correcto para encontrar este pod.
    purpose: cdns
  tolerations:
    # Dado que el nodo está tainted para que no se ejecute nada más en él,
    # el pod tiene que tolerar esas taints para poder correr allí.
  - key: purpose
    operator: Equal
    value: cdns
    effect: NoSchedule
  - key: purpose
    operator: Equal
    value: cdns
    effect: NoExecute